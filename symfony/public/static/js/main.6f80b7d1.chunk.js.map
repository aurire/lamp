{"version":3,"sources":["reducers/rootReducer.js","constants/actionTypes.js","actions/index.js","pages/Logged/User/Notes/List.js","pages/Logged/User/Notes/NotesCreateEdit.js","pages/Logged/User/Notes/NotesShare.js","pages/Logged/User/Notes/NotesSharedWithMe.js","pages/Logged/User/UserSettings.js","pages/Logged/User.js","pages/Login.js","pages/Register.js","AppRouter.js","App.js","index.js"],"names":["initialState","loading","loaded","dataFetchFinished","userFetchFinished","mainActionFinished","error","userData","user","alert","alertShown","notes","note","shared","deleted","search","rootReducer","state","action","type","payload","headers","location","data","msg","page","items","id","item","email","HOST","getUserData","dispatch","userId","split","axios","get","pop","withCredentials","then","res","getUserDataSuccess","catch","err","initiateLoginStarted","isLoading","initiateLoginSuccess","initiateLoginFailed","initiateLogoutStarted","initiateLogoutSuccess","initiateLogoutFailed","initiateRegisterStarted","initiateRegisterSuccess","initiateRegisterFailed","setAlert","initiateNoteCreateStarted","initiateNoteCreateSuccess","initiateNoteCreateFailed","fetchNoteListStarted","fetchNoteListSuccess","fetchNoteListFailed","fetchNoteStarted","fetchNoteSuccess","fetchNoteFailed","initiateNoteEditStarted","initiateNoteEditSuccess","initiateNoteEditFailed","initiateNoteShareStarted","initiateNoteShareSuccess","initiateNoteShareFailed","fetchSharedForUserStarted","fetchSharedForUserSuccess","fetchSharedForUserFailed","deleteShareStarted","deleteShareSuccess","deleteShareFailed","deleteNoteStarted","deleteNoteSuccess","deleteNoteFailed","initiateUserUpdateStarted","initiateUserUpdateSuccess","initiateUserUpdateFailed","fetchByEmailStarted","fetchByEmailSuccess","fetchByEmailFailed","List","props","onDeleteClick","bind","event","preventDefault","this","deleteNote","target","dataset","match","params","listItems","map","ListGroup","Item","key","style","fontWeight","fontSize","Intl","DateTimeFormat","year","month","day","hour","minute","second","format","Date","to","href","data-id","onClick","view","includes","first","Pagination","First","next","Next","Ellipsis","prev","Prev","last","Last","curPage","current","active","history","listen","pathParts","pathname","pageId","lastPart","localStorage","getItem","fetchNotesList","prevProps","prevState","snapshot","Object","keys","length","setState","getNotes","getPager","React","Component","connectedList","connect","owner","delete","withRouter","NotesCreateEdit","_isMounted","title","message","noteShares","refreshing","handleChange","handleSubmit","handleDelete","value","getCreateOrEdit","initiateNoteCreate","initiateNoteEdit","getNoteId","deleteShare","push","thisNote","nid","fetchNote","Form","Group","Label","Control","onChange","placeholder","name","Text","className","Button","variant","noteShare","hasOwnProperty","shareThis","getForm","getNoteShares","connectedNotesCreateEdit","ownerId","post","put","NotesShare","userid","handleSearchSubmit","handleShareSubmit","getResults","fetchByEmail","initiateNoteShare","response","replace","onSubmit","results","filter","result","isMe","as","custom","ConnectedNotesShare","encodeURIComponent","NotesSharedWithMe","fetchSharedForUser","ConnectedNotesSharedWithMe","UserSettings","dataLoaded","phone","initiateUserUpdate","phoneNumber","connectedUserSettings","User","handleLogoutClick","initiateLogout","Alert","Navbar","bg","expand","sticky","Brand","Toggle","aria-controls","Collapse","Nav","Link","color","path","component","connectedUser","removeItem","Login","password","initiateLogin","role","data-dismiss","aria-label","aria-hidden","disabled","connectedLogin","setItem","Register","initiateRegister","connectedRegister","AppRouter","locationChanged","Spinner","animation","exact","connectedAppRouter","App","Container","Jumbotron","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6f80b7d1.chunk.js","sourcesContent":["import {\n    INITIATE_LOGIN_STARTED,\n    INITIATE_LOGIN_FAILURE,\n    INITIATE_LOGIN_SUCCESS,\n    INITIATE_LOGOUT_STARTED,\n    INITIATE_LOGOUT_FAILURE,\n    INITIATE_LOGOUT_SUCCESS,\n    GET_USER_DATA_SUCCESS,\n    INITIATE_REGISTER_STARTED,\n    INITIATE_REGISTER_SUCCESS,\n    INITIATE_REGISTER_FAILURE,\n    LOCATION_CHANGED, SET_ALERT,\n    INITIATE_NOTE_CREATE_STARTED,\n    INITIATE_NOTE_CREATE_FAILURE,\n    INITIATE_NOTE_CREATE_SUCCESS,\n    FETCH_NOTE_LIST_STARTED,\n    FETCH_NOTE_LIST_FAILURE,\n    FETCH_NOTE_LIST_SUCCESS,\n    FETCH_NOTE_SUCCESS,\n    FETCH_NOTE_STARTED,\n    FETCH_NOTE_FAILURE,\n    INITIATE_NOTE_EDIT_SUCCESS,\n    INITIATE_NOTE_EDIT_STARTED,\n    INITIATE_NOTE_EDIT_FAILURE,\n    INITIATE_NOTE_SHARE_SUCCESS,\n    INITIATE_NOTE_SHARE_STARTED,\n    INITIATE_NOTE_SHARE_FAILURE,\n    FETCH_SHARED_FOR_USER_SUCCESS,\n    FETCH_SHARED_FOR_USER_STARTED,\n    FETCH_SHARED_FOR_USER_FAILURE,\n    DELETE_SHARE_SUCCESS,\n    DELETE_SHARE_STARTED,\n    DELETE_SHARE_FAILURE,\n    DELETE_NOTE_SUCCESS,\n    DELETE_NOTE_STARTED,\n    DELETE_NOTE_FAILURE,\n    INITIATE_USER_UPDATE_SUCCESS,\n    INITIATE_USER_UPDATE_FAILURE,\n    INITIATE_USER_UPDATE_STARTED,\n    FETCH_BY_EMAIL_SUCCESS,\n    FETCH_BY_EMAIL_STARTED,\n    FETCH_BY_EMAIL_FAILURE\n} from \"../constants/actionTypes\";\n\nconst initialState = {\n    loading: false,\n    loaded: false,\n    dataFetchFinished: false,\n    userFetchFinished: false,\n    mainActionFinished: false,\n    error: null,\n    userData: null,\n    user: null,\n    alert: null,\n    alertShown: true,\n    notes: {},\n    note: {},\n    shared: {},\n    deleted: {},\n    search: {}\n};\n\nconst rootReducer = (state = initialState, action) => {\n    if (INITIATE_LOGIN_STARTED === action.type) {\n        return {\n            ...state,\n            loading: true,\n            loaded: false,\n        };\n    } else if (INITIATE_LOGIN_SUCCESS === action.type) {\n        return {\n            ...state,\n            loading: false,\n            loaded: true,\n            userFetchFinished: false,\n            error: null,\n            user: action.payload.payload.headers.location\n        };\n    } else if (INITIATE_LOGIN_FAILURE === action.type) {\n        return {\n            ...state,\n            loading: false,\n            userFetchFinished: false,\n            loaded: false,\n            error: action.payload.error\n        };\n    } else if (GET_USER_DATA_SUCCESS === action.type) {\n        return {\n            ...state,\n            loading: false,\n            loaded: true,\n            userFetchFinished: true,\n            userData: action.payload.payload.data,\n            user: action.payload.payload.data['@id']\n        };\n    } else if (INITIATE_LOGOUT_STARTED === action.type) {\n        return {\n            ...state,\n            loading: true,\n            loaded: false,\n        };\n    } else if (INITIATE_LOGOUT_SUCCESS === action.type) {\n        return {\n            ...state,\n            loading: false,\n            loaded: true,\n            error: null,\n            userData: null,\n            user: null\n        };\n    } else if (INITIATE_LOGOUT_FAILURE === action.type) {\n        return {\n            ...state,\n            loading: false,\n            loaded: false,\n            error: action.payload.error\n        };\n    } else if (INITIATE_REGISTER_STARTED === action.type) {\n        return {\n            ...state,\n            loading: true,\n            loaded: false\n        };\n    } else if (INITIATE_REGISTER_SUCCESS === action.type) {\n        return {\n            ...state,\n            loading: false,\n            loaded: true,\n            error: null\n        };\n    } else if (INITIATE_REGISTER_FAILURE === action.type) {\n        return {\n            ...state,\n            loading: false,\n            loaded: false,\n            error: action.payload.error\n        };\n    } else if (LOCATION_CHANGED === action.type) {\n        return state.alertShown\n            ? {\n                ...state,\n                alert: null,\n                loaded: false,\n                deleted: {},\n                search: {},\n                dataFetchFinished: false,\n                mainActionFinished: false,\n                error: ''\n            } : {\n                ...state,\n                alertShown: true,\n                loaded: false,\n                deleted: {},\n                search: {},\n                dataFetchFinished: false,\n                mainActionFinished: false,\n                error: ''\n            };\n    } else if (SET_ALERT === action.type) {\n        return {\n            ...state,\n            alert: action.payload.msg,\n            alertShown: false\n        };\n    } else if (INITIATE_NOTE_CREATE_STARTED === action.type) {\n        return {\n            ...state,\n            loading: true,\n            loaded: false\n        };\n    } else if (INITIATE_NOTE_CREATE_SUCCESS === action.type) {\n        return {\n            ...state,\n            loading: false,\n            loaded: true,\n            mainActionFinished: true,\n            error: null,\n            notes: {}\n        };\n    } else if (INITIATE_NOTE_CREATE_FAILURE === action.type) {\n        return {\n            ...state,\n            loading: false,\n            loaded: false,\n            error: action.payload.error\n        };\n    } else if (FETCH_NOTE_LIST_STARTED === action.type) {\n        return {\n            ...state,\n            loading: true,\n            loaded: false\n        };\n    } else if (FETCH_NOTE_LIST_SUCCESS === action.type) {\n        return {\n            ...state,\n            loading: false,\n            loaded: true,\n            error: null,\n            deleted: {},\n            notes: {\n                ...state.notes,\n                [action.payload.page]: action.payload.items.data\n            }\n        };\n    } else if (FETCH_NOTE_LIST_FAILURE === action.type) {\n        return {\n            ...state,\n            loading: false,\n            loaded: false,\n            error: action.payload.error\n        };\n    } else if (FETCH_NOTE_STARTED === action.type) {\n        return {\n            ...state,\n            loading: true,\n            loaded: false,\n        };\n    } else if (FETCH_NOTE_SUCCESS === action.type) {\n        return {\n            ...state,\n            loading: false,\n            loaded: true,\n            dataFetchFinished: true,\n            error: null,\n            note: {\n                ...state.note,\n                [action.payload.id]: action.payload.item.data\n            }\n        };\n    } else if (FETCH_NOTE_FAILURE === action.type) {\n        return {\n            ...state,\n            loading: false,\n            loaded: false,\n            dataFetchFinished: true,\n            error: action.payload.error\n        };\n    } else if (INITIATE_NOTE_EDIT_STARTED === action.type) {\n        return {\n            ...state,\n            loading: true,\n            loaded: false\n        };\n    } else if (INITIATE_NOTE_EDIT_SUCCESS === action.type) {\n        return {\n            ...state,\n            loading: false,\n            loaded: true,\n            mainActionFinished: true,\n            notes: {},\n            error: null\n        };\n    } else if (INITIATE_NOTE_EDIT_FAILURE === action.type) {\n        return {\n            ...state,\n            loading: false,\n            loaded: false,\n            error: action.payload.error\n        };\n    } else if (INITIATE_NOTE_SHARE_STARTED === action.type) {\n        return {\n            ...state,\n            loading: true,\n            loaded: false\n        };\n    } else if (INITIATE_NOTE_SHARE_SUCCESS === action.type) {\n        return {\n            ...state,\n            loading: false,\n            loaded: true,\n            mainActionFinished: true,\n            error: null,\n            notes: {}\n        };\n    } else if (INITIATE_NOTE_SHARE_FAILURE === action.type) {\n        return {\n            ...state,\n            loading: false,\n            loaded: false,\n            error: action.payload.error\n        };\n    } else if (FETCH_SHARED_FOR_USER_STARTED === action.type) {\n        return {\n            ...state,\n            loading: true,\n            loaded: false,\n        };\n    } else if (FETCH_SHARED_FOR_USER_SUCCESS === action.type) {\n        return {\n            ...state,\n            loading: false,\n            loaded: true,\n            dataFetchFinished: true,\n            error: null,\n            shared: {\n                ...state.shared,\n                [action.payload.page]: action.payload.item.data\n            }\n        };\n    } else if (FETCH_SHARED_FOR_USER_FAILURE === action.type) {\n        return {\n            ...state,\n            loading: false,\n            loaded: false,\n            dataFetchFinished: true,\n            error: action.payload.error\n        };\n    } else if (DELETE_SHARE_STARTED === action.type) {\n        return {\n            ...state,\n            loading: true,\n            loaded: false\n        };\n    } else if (DELETE_SHARE_SUCCESS === action.type) {\n        return {\n            ...state,\n            loading: false,\n            loaded: true,\n            error: null,\n            notes: {},\n            deleted: {\n                ...state.deleted,\n                [action.payload.id]: true\n            }\n        };\n    } else if (DELETE_SHARE_FAILURE === action.type) {\n        return {\n            ...state,\n            loading: false,\n            loaded: false,\n            error: action.payload.error\n        };\n    } else if (DELETE_NOTE_STARTED === action.type) {\n        return {\n            ...state,\n            loading: true,\n            loaded: false\n        };\n    } else if (DELETE_NOTE_SUCCESS === action.type) {\n        return {\n            ...state,\n            loading: false,\n            loaded: true,\n            error: null,\n            deleted: {\n                ...state.deleted,\n                [action.payload.id]: true\n            }\n        };\n    } else if (DELETE_NOTE_FAILURE === action.type) {\n        return {\n            ...state,\n            loading: false,\n            loaded: false,\n            error: action.payload.error\n        };\n    } else if (INITIATE_USER_UPDATE_STARTED === action.type) {\n        return {\n            ...state,\n            loading: true,\n            loaded: false\n        };\n    } else if (INITIATE_USER_UPDATE_SUCCESS === action.type) {\n        return {\n            ...state,\n            loading: false,\n            loaded: true,\n            mainActionFinished: true,\n            userFetchFinished: true,\n            userData: action.payload.payload.data,\n            user: action.payload.payload.data['@id'],\n            notes: {},\n            error: null\n        };\n    } else if (INITIATE_USER_UPDATE_FAILURE === action.type) {\n        return {\n            ...state,\n            loading: false,\n            loaded: false,\n            error: action.payload.error\n        };\n    } else if (FETCH_BY_EMAIL_STARTED === action.type) {\n        return {\n            ...state,\n            loading: true,\n            loaded: false,\n        };\n    } else if (FETCH_BY_EMAIL_SUCCESS === action.type) {\n        return {\n            ...state,\n            loading: false,\n            loaded: true,\n            dataFetchFinished: true,\n            error: null,\n            search: {\n                ...state.search,\n                [action.payload.email]: {\n                    ...state.search[[action.payload.email]],\n                    [action.payload.page]: action.payload.item.data\n                }\n            }\n        };\n    } else if (FETCH_BY_EMAIL_FAILURE === action.type) {\n        return {\n            ...state,\n            loading: false,\n            loaded: false,\n            dataFetchFinished: true,\n            error: action.payload.error\n        };\n    }\n\n    return state;\n}\n\nexport default rootReducer;\n","export const FETCH_NOTE_LIST_SUCCESS = 'FETCH_NOTE_LIST_SUCCESS';\nexport const FETCH_NOTE_LIST_FAILURE = 'FETCH_NOTE_LIST_FAILURE';\nexport const FETCH_NOTE_LIST_STARTED = 'FETCH_NOTE_LIST_STARTED';\nexport const INITIATE_LOGIN_STARTED = 'INITIATE_LOGIN_STARTED';\nexport const INITIATE_LOGIN_SUCCESS = 'INITIATE_LOGIN_SUCCESS';\nexport const INITIATE_LOGIN_FAILURE = 'INITIATE_LOGIN_FAILURE';\nexport const INITIATE_LOGOUT_STARTED = 'INITIATE_LOGOUT_STARTED';\nexport const INITIATE_LOGOUT_SUCCESS = 'INITIATE_LOGOUT_SUCCESS';\nexport const INITIATE_LOGOUT_FAILURE = 'INITIATE_LOGOUT_FAILURE';\nexport const GET_USER_DATA_SUCCESS = 'GET_USER_DATA_SUCCESS';\nexport const INITIATE_REGISTER_STARTED = 'INITIATE_REGISTER_STARTED';\nexport const INITIATE_REGISTER_SUCCESS = 'INITIATE_REGISTER_SUCCESS';\nexport const INITIATE_REGISTER_FAILURE = 'INITIATE_REGISTER_FAILURE';\nexport const LOCATION_CHANGED = 'LOCATION_CHANGED';\nexport const SET_ALERT = 'SET_ALERT';\nexport const INITIATE_NOTE_CREATE_STARTED = 'INITIATE_NOTE_CREATE_STARTED';\nexport const INITIATE_NOTE_CREATE_SUCCESS = 'INITIATE_NOTE_CREATE_SUCCESS';\nexport const INITIATE_NOTE_CREATE_FAILURE = 'INITIATE_NOTE_CREATE_FAILURE';\nexport const FETCH_NOTE_STARTED = 'FETCH_NOTE_STARTED';\nexport const FETCH_NOTE_SUCCESS = 'FETCH_NOTE_SUCCESS';\nexport const FETCH_NOTE_FAILURE = 'FETCH_NOTE_FAILURE';\nexport const INITIATE_NOTE_EDIT_STARTED = 'INITIATE_NOTE_EDIT_STARTED';\nexport const INITIATE_NOTE_EDIT_SUCCESS = 'INITIATE_NOTE_EDIT_SUCCESS';\nexport const INITIATE_NOTE_EDIT_FAILURE = 'INITIATE_NOTE_EDIT_FAILURE';\nexport const INITIATE_NOTE_SHARE_STARTED = 'INITIATE_NOTE_SHARE_STARTED';\nexport const INITIATE_NOTE_SHARE_SUCCESS = 'INITIATE_NOTE_SHARE_SUCCESS';\nexport const INITIATE_NOTE_SHARE_FAILURE = 'INITIATE_NOTE_SHARE_FAILURE';\nexport const FETCH_SHARED_FOR_USER_STARTED = 'FETCH_SHARED_FOR_USER_STARTED';\nexport const FETCH_SHARED_FOR_USER_SUCCESS = 'FETCH_SHARED_FOR_USER_SUCCESS';\nexport const FETCH_SHARED_FOR_USER_FAILURE = 'FETCH_SHARED_FOR_USER_FAILURE';\nexport const DELETE_SHARE_STARTED = 'DELETE_SHARE_STARTED';\nexport const DELETE_SHARE_SUCCESS = 'DELETE_SHARE_SUCCESS';\nexport const DELETE_SHARE_FAILURE = 'DELETE_SHARE_FAILURE';\nexport const DELETE_NOTE_STARTED = 'DELETE_NOTE_STARTED';\nexport const DELETE_NOTE_SUCCESS = 'DELETE_NOTE_SUCCESS';\nexport const DELETE_NOTE_FAILURE = 'DELETE_NOTE_FAILURE';\nexport const INITIATE_USER_UPDATE_STARTED = 'INITIATE_USER_UPDATE_STARTED';\nexport const INITIATE_USER_UPDATE_SUCCESS = 'INITIATE_USER_UPDATE_SUCCESS';\nexport const INITIATE_USER_UPDATE_FAILURE = 'INITIATE_USER_UPDATE_FAILURE';\nexport const FETCH_BY_EMAIL_STARTED = 'FETCH_BY_EMAIL_STARTED';\nexport const FETCH_BY_EMAIL_SUCCESS = 'FETCH_BY_EMAIL_SUCCESS';\nexport const FETCH_BY_EMAIL_FAILURE = 'FETCH_BY_EMAIL_FAILURE';\n","import {\n    INITIATE_LOGIN_STARTED,\n    INITIATE_LOGIN_SUCCESS,\n    INITIATE_LOGIN_FAILURE,\n    INITIATE_LOGOUT_STARTED,\n    INITIATE_LOGOUT_FAILURE,\n    INITIATE_LOGOUT_SUCCESS,\n    GET_USER_DATA_SUCCESS,\n    INITIATE_REGISTER_STARTED,\n    INITIATE_REGISTER_SUCCESS,\n    INITIATE_REGISTER_FAILURE,\n    LOCATION_CHANGED,\n    SET_ALERT,\n    INITIATE_NOTE_CREATE_STARTED,\n    INITIATE_NOTE_CREATE_FAILURE,\n    INITIATE_NOTE_CREATE_SUCCESS,\n    FETCH_NOTE_LIST_STARTED,\n    FETCH_NOTE_LIST_FAILURE,\n    FETCH_NOTE_LIST_SUCCESS,\n    FETCH_NOTE_FAILURE,\n    FETCH_NOTE_STARTED,\n    FETCH_NOTE_SUCCESS,\n    INITIATE_NOTE_EDIT_FAILURE,\n    INITIATE_NOTE_EDIT_STARTED,\n    INITIATE_NOTE_EDIT_SUCCESS,\n    INITIATE_NOTE_SHARE_FAILURE,\n    INITIATE_NOTE_SHARE_STARTED,\n    INITIATE_NOTE_SHARE_SUCCESS,\n    FETCH_SHARED_FOR_USER_FAILURE,\n    FETCH_SHARED_FOR_USER_STARTED,\n    FETCH_SHARED_FOR_USER_SUCCESS,\n    DELETE_SHARE_FAILURE,\n    DELETE_SHARE_STARTED,\n    DELETE_SHARE_SUCCESS,\n    DELETE_NOTE_FAILURE,\n    DELETE_NOTE_STARTED,\n    DELETE_NOTE_SUCCESS,\n    INITIATE_USER_UPDATE_STARTED,\n    INITIATE_USER_UPDATE_FAILURE,\n    INITIATE_USER_UPDATE_SUCCESS,\n    FETCH_BY_EMAIL_FAILURE,\n    FETCH_BY_EMAIL_STARTED,\n    FETCH_BY_EMAIL_SUCCESS\n} from \"../constants/actionTypes\";\nimport axios from \"axios\";\n\nconst HOST = 'http://localhost/';\n\n//getUserData\nexport const getUserData = (id) => {\n    return dispatch => {\n        //dispatch(getUserDataStarted());\n        if (id !== null) {\n            let userId = id.split('/');\n            axios\n                .get(HOST + \"api/users/\" + userId.pop(), {withCredentials: true})\n                .then(res => {\n                    dispatch(getUserDataSuccess(res));\n                })\n                .catch(err => {\n                    //dispatch(getUserDataFailed(err.message));\n                });\n        }\n    };\n};\nexport const getUserDataSuccess = payload => {\n    return {\n        type: GET_USER_DATA_SUCCESS,\n        payload: {\n            payload\n        }\n    };\n};\n\n//initiateLogin\nexport const initiateLogin = (email, password) => {\n    return dispatch => {\n        dispatch(initiateLoginStarted());\n\n        axios\n            .post(HOST + \"login\", {\n                \"email\": email,\n                \"password\": password\n            })\n            .then(res => {\n                if (res.headers.location) {\n                    localStorage.setItem('user', res.headers.location);\n                }\n                dispatch(getUserData(res.headers.location));\n                dispatch(initiateLoginSuccess(res));\n            })\n            .catch(err => {\n                dispatch(initiateLoginFailed(err));\n            });\n    };\n};\nconst initiateLoginStarted = () => {\n    return {\n        type: INITIATE_LOGIN_STARTED,\n        payload: {\n            isLoading: true\n        }\n    };\n};\nconst initiateLoginSuccess = payload => {\n    return {\n        type: INITIATE_LOGIN_SUCCESS,\n        payload: {\n            payload\n        }\n    };\n};\nconst initiateLoginFailed = error => {\n    return {\n        type: INITIATE_LOGIN_FAILURE,\n        payload: {\n            error\n        }\n    };\n};\n\n//initiateLogout\nexport const initiateLogout = () => {\n    return dispatch => {\n        dispatch(initiateLogoutStarted());\n        axios\n            .post(HOST + \"logout\")\n            .then(res => {\n                localStorage.removeItem('user');\n                dispatch(initiateLogoutSuccess(res));\n            })\n            .catch(err => {\n                dispatch(initiateLogoutFailed(err.message));\n            });\n    };\n};\nconst initiateLogoutStarted = () => {\n    return {\n        type: INITIATE_LOGOUT_STARTED,\n        payload: {\n            isLoading: true\n        }\n    };\n};\nconst initiateLogoutSuccess = payload => {\n    return {\n        type: INITIATE_LOGOUT_SUCCESS,\n        payload: {\n            payload\n        }\n    };\n};\nconst initiateLogoutFailed = error => {\n    return {\n        type: INITIATE_LOGOUT_FAILURE,\n        payload: {\n            error\n        }\n    };\n};\n\n//initiateRegister\nexport const initiateRegister = (email, password) => {\n    return dispatch => {\n        dispatch(initiateRegisterStarted());\n\n        axios\n            .post(HOST + \"api/users\", {\n                \"email\": email,\n                \"password\": password\n            }, {withCredentials: true})\n            .then(res => {\n                dispatch(initiateRegisterSuccess(res));\n            })\n            .catch(err => {\n                dispatch(initiateRegisterFailed(err));\n            });\n    };\n};\nconst initiateRegisterStarted = () => {\n    return {\n        type: INITIATE_REGISTER_STARTED,\n        payload: {\n            isLoading: true\n        }\n    };\n};\nconst initiateRegisterSuccess = payload => {\n    return {\n        type: INITIATE_REGISTER_SUCCESS,\n        payload: {\n            payload\n        }\n    };\n};\nconst initiateRegisterFailed = error => {\n    return {\n        type: INITIATE_REGISTER_FAILURE,\n        payload: {\n            error\n        }\n    };\n};\n\nexport const locationChanged = () => {\n    return {\n        type: LOCATION_CHANGED,\n        payload: {}\n    };\n};\nexport const setAlert = (msg) => {\n    return {\n        type: SET_ALERT,\n        payload: {msg: msg}\n    };\n};\n\n//initiateNoteCreate\nexport const initiateNoteCreate = (ownerId, title, message) => {\n    return dispatch => {\n        dispatch(initiateNoteCreateStarted());\n\n        axios\n            .post(HOST + \"api/notes\", {\n                \"title\": title,\n                \"message\": message,\n                \"isPublic\": true,\n                \"owner\": \"/api/users/\" + ownerId\n            }, {withCredentials: true})\n            .then(res => {\n                dispatch(initiateNoteCreateSuccess(res));\n            })\n            .catch(err => {\n                dispatch(initiateNoteCreateFailed(err));\n            });\n    };\n};\nconst initiateNoteCreateStarted = () => {\n    return {\n        type: INITIATE_NOTE_CREATE_STARTED,\n        payload: {\n            isLoading: true\n        }\n    };\n};\nconst initiateNoteCreateSuccess = payload => {\n    return {\n        type: INITIATE_NOTE_CREATE_SUCCESS,\n        payload: {\n            payload\n        }\n    };\n};\nconst initiateNoteCreateFailed = error => {\n    return {\n        type: INITIATE_NOTE_CREATE_FAILURE,\n        payload: {\n            error\n        }\n    };\n};\n\n//fetchNotesList\nexport const fetchNotesList = (owner, page) => {\n    return dispatch => {\n        dispatch(fetchNoteListStarted());\n\n        axios\n            .get(HOST + \"api/notes?owner=\" + owner\n                + \"&page=\" + page, {withCredentials: true})\n            .then(res => {\n                dispatch(fetchNoteListSuccess(res, page));\n            })\n            .catch(err => {\n                dispatch(fetchNoteListFailed(err));\n            });\n    };\n};\nconst fetchNoteListStarted = () => {\n    return {\n        type: FETCH_NOTE_LIST_STARTED,\n        payload: {\n            isLoading: true\n        }\n    };\n};\nconst fetchNoteListSuccess = (payload, page) => {\n    return {\n        type: FETCH_NOTE_LIST_SUCCESS,\n        payload: {\n            items: payload,\n            page: page\n        }\n    };\n};\nconst fetchNoteListFailed = error => {\n    return {\n        type: FETCH_NOTE_LIST_FAILURE,\n        payload: {\n            error\n        }\n    };\n};\n\n//fetchNote\nexport const fetchNote = (id) => {\n    return dispatch => {\n        dispatch(fetchNoteStarted());\n\n        axios\n            .get(HOST + \"api/notes/\" + id, {withCredentials: true})\n            .then(res => {\n                dispatch(fetchNoteSuccess(res, id));\n            })\n            .catch(err => {\n                dispatch(fetchNoteFailed(err));\n            });\n    };\n};\nconst fetchNoteStarted = () => {\n    return {\n        type: FETCH_NOTE_STARTED,\n        payload: {\n            isLoading: true\n        }\n    };\n};\nconst fetchNoteSuccess = (payload, id) => {\n    return {\n        type: FETCH_NOTE_SUCCESS,\n        payload: {\n            item: payload,\n            id: id\n        }\n    };\n};\nconst fetchNoteFailed = error => {\n    return {\n        type: FETCH_NOTE_FAILURE,\n        payload: {\n            error\n        }\n    };\n};\n\n//initiateNoteEdit\nexport const initiateNoteEdit = (ownerId, id, title, message) => {\n    return dispatch => {\n        dispatch(initiateNoteEditStarted());\n\n        axios\n            .put(HOST + \"api/notes/\" + id, {\n                \"title\": title,\n                \"message\": message,\n                \"isPublic\": true,\n                \"owner\": \"/api/users/\" + ownerId\n            }, {withCredentials: true})\n            .then(res => {\n                dispatch(initiateNoteEditSuccess(res));\n            })\n            .catch(err => {\n                dispatch(initiateNoteEditFailed(err));\n            });\n    };\n};\nconst initiateNoteEditStarted = () => {\n    return {\n        type: INITIATE_NOTE_EDIT_STARTED,\n        payload: {\n            isLoading: true\n        }\n    };\n};\nconst initiateNoteEditSuccess = payload => {\n    return {\n        type: INITIATE_NOTE_EDIT_SUCCESS,\n        payload: {\n            payload\n        }\n    };\n};\nconst initiateNoteEditFailed = error => {\n    return {\n        type: INITIATE_NOTE_EDIT_FAILURE,\n        payload: {\n            error\n        }\n    };\n};\n\n//initiateNoteShare\nexport const initiateNoteShare = (note, user) => {\n    return dispatch => {\n        dispatch(initiateNoteShareStarted());\n\n        axios\n            .post(HOST + \"api/share_note_to_users\", {\n                \"note\": note,\n                \"user\": user\n            }, {withCredentials: true})\n            .then(res => {\n                dispatch(initiateNoteShareSuccess(res));\n            })\n            .catch(err => {\n                dispatch(initiateNoteShareFailed(err));\n            });\n    };\n};\nconst initiateNoteShareStarted = () => {\n    return {\n        type: INITIATE_NOTE_SHARE_STARTED,\n        payload: {\n            isLoading: true\n        }\n    };\n};\nconst initiateNoteShareSuccess = payload => {\n    return {\n        type: INITIATE_NOTE_SHARE_SUCCESS,\n        payload: {\n            payload\n        }\n    };\n};\nconst initiateNoteShareFailed = error => {\n    return {\n        type: INITIATE_NOTE_SHARE_FAILURE,\n        payload: {\n            error\n        }\n    };\n};\n\n//fetchSharedForUser\nexport const fetchSharedForUser = (id, page) => {\n    return dispatch => {\n        dispatch(fetchSharedForUserStarted());\n\n        axios\n            .get(\n                HOST + \"api/share_note_to_users?user=\" + id + \"&page=\" + page,\n                {withCredentials: true}\n                )\n            .then(res => {\n                dispatch(fetchSharedForUserSuccess(res, page));\n            })\n            .catch(err => {\n                dispatch(fetchSharedForUserFailed(err));\n            });\n    };\n};\nconst fetchSharedForUserStarted = () => {\n    return {\n        type: FETCH_SHARED_FOR_USER_STARTED,\n        payload: {\n            isLoading: true\n        }\n    };\n};\nconst fetchSharedForUserSuccess = (payload, page) => {\n    return {\n        type: FETCH_SHARED_FOR_USER_SUCCESS,\n        payload: {\n            item: payload,\n            page: page\n        }\n    };\n};\nconst fetchSharedForUserFailed = error => {\n    return {\n        type: FETCH_SHARED_FOR_USER_FAILURE,\n        payload: {\n            error\n        }\n    };\n};\n\n//deleteShare\nexport const deleteShare = (id) => {\n    return dispatch => {\n        dispatch(deleteShareStarted());\n\n        axios\n            .delete(\n                HOST + \"api/share_note_to_users/\" + id,\n                {withCredentials: true}\n            )\n            .then(res => {\n                dispatch(deleteShareSuccess(id));\n            })\n            .catch(err => {\n                dispatch(deleteShareFailed(err));\n            });\n    };\n};\nconst deleteShareStarted = () => {\n    return {\n        type: DELETE_SHARE_STARTED,\n        payload: {\n            isLoading: true\n        }\n    };\n};\nconst deleteShareSuccess = (id) => {\n    return {\n        type: DELETE_SHARE_SUCCESS,\n        payload: {\n            id: id\n        }\n    };\n};\nconst deleteShareFailed = error => {\n    return {\n        type: DELETE_SHARE_FAILURE,\n        payload: {\n            error\n        }\n    };\n};\n\n//deleteNote\nexport const deleteNote = (id) => {\n    return dispatch => {\n        dispatch(deleteNoteStarted());\n\n        axios\n            .delete(\n                HOST + \"api/notes/\" + id,\n                {withCredentials: true}\n            )\n            .then(res => {\n                dispatch(deleteNoteSuccess(id));\n            })\n            .catch(err => {\n                dispatch(deleteNoteFailed(err));\n            });\n    };\n};\nconst deleteNoteStarted = () => {\n    return {\n        type: DELETE_NOTE_STARTED,\n        payload: {\n            isLoading: true\n        }\n    };\n};\nconst deleteNoteSuccess = (id) => {\n    return {\n        type: DELETE_NOTE_SUCCESS,\n        payload: {\n            id: id\n        }\n    };\n};\nconst deleteNoteFailed = error => {\n    return {\n        type: DELETE_NOTE_FAILURE,\n        payload: {\n            error\n        }\n    };\n};\n\n//initiateUserUpdate\nexport const initiateUserUpdate = (id, phone) => {\n    return dispatch => {\n        dispatch(initiateUserUpdateStarted());\n\n        axios\n            .put(HOST + \"api/users/\" + id, {\n                \"phoneNumber\": phone\n            }, {withCredentials: true})\n            .then(res => {\n                dispatch(initiateUserUpdateSuccess(res));\n            })\n            .catch(err => {\n                dispatch(initiateUserUpdateFailed(err));\n            });\n    };\n};\nconst initiateUserUpdateStarted = () => {\n    return {\n        type: INITIATE_USER_UPDATE_STARTED,\n        payload: {\n            isLoading: true\n        }\n    };\n};\nconst initiateUserUpdateSuccess = payload => {\n    return {\n        type: INITIATE_USER_UPDATE_SUCCESS,\n        payload: {\n            payload\n        }\n    };\n};\nconst initiateUserUpdateFailed = error => {\n    return {\n        type: INITIATE_USER_UPDATE_FAILURE,\n        payload: {\n            error\n        }\n    };\n};\n\n//fetchByEmail\nexport const fetchByEmail = (email, page) => {\n    return dispatch => {\n        dispatch(fetchByEmailStarted());\n\n        axios\n            .get(\n                HOST + \"api/users?properties%5B%5D=email&properties%5B%5D=id&email=\"\n                + encodeURIComponent(email) + \"&page=\" + page,\n                {withCredentials: true}\n            )\n            .then(res => {\n                dispatch(fetchByEmailSuccess(res, email, page));\n            })\n            .catch(err => {\n                dispatch(fetchByEmailFailed(err));\n            });\n    };\n};\nconst fetchByEmailStarted = () => {\n    return {\n        type: FETCH_BY_EMAIL_STARTED,\n        payload: {\n            isLoading: true\n        }\n    };\n};\nconst fetchByEmailSuccess = (payload, email, page) => {\n    return {\n        type: FETCH_BY_EMAIL_SUCCESS,\n        payload: {\n            item: payload,\n            email: email,\n            page: page\n        }\n    };\n};\nconst fetchByEmailFailed = error => {\n    return {\n        type: FETCH_BY_EMAIL_FAILURE,\n        payload: {\n            error\n        }\n    };\n};\n","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport {withRouter} from \"react-router\";\nimport {Link} from \"react-router-dom\";\nimport {fetchNotesList, setAlert, deleteNote} from \"../../../../actions\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport Pagination from \"react-bootstrap/Pagination\";\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        fetchNotesList: (owner, page) => dispatch(fetchNotesList(owner, page)),\n        deleteNote: (id) => dispatch(deleteNote(id)),\n        setAlert: (msg) => dispatch(setAlert(msg))\n    };\n};\n\nconst mapStateToProps = (state) => {\n    return {...state};\n};\n\n//http://localhost/api/notes?page=1\nclass List extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            msg: ''\n        };\n        this.onDeleteClick = this.onDeleteClick.bind(this);\n    }\n    onDeleteClick(event) {\n        event.preventDefault();\n        this.props.deleteNote(event.target.dataset.id.split('/').pop());\n    }\n    getNotes() {\n        if (this.props.notes[this.props.match.params.id]) {\n            let notes = this.props.notes[this.props.match.params.id]['hydra:member'];\n\n            const listItems = notes.map((note) =>\n              <ListGroup.Item key={note['@id']}>\n                  <h5>{note['title']} <span style={{fontWeight: \"normal\", fontSize: \"small\"}}>{\n                      new Intl.DateTimeFormat(\n                          \"en-GB\",\n                          {\n                              year: \"numeric\",\n                              month: \"long\",\n                              day: \"2-digit\",\n                              hour: 'numeric',\n                              minute: 'numeric',\n                              second: 'numeric'\n                          }\n                      ).format(new Date(note['createdAt']))\n                  }</span></h5>\n                  <p>{note['shortMessage']}</p>\n                  <Link to={\"/user/notes/edit/\" + note['@id'].split('/').pop()}>Edit Note</Link>\n                  <span> | </span>\n                  <Link to={\"/user/notes/share/\" + note['@id'].split('/').pop()}>Share Note</Link>\n                  <span> | </span>\n                  <a href=\"#\" data-id={note['@id'].split('/').pop()} onClick={this.onDeleteClick} >Delete Note</a>\n              </ListGroup.Item>\n            );\n\n            return (\n                <ListGroup>\n                    {listItems}\n                </ListGroup>\n            );\n        }\n\n        return '';\n    }\n    getPager() {\n        if (this.props.notes[this.props.match.params.id]) {\n            let view = this.props.notes[this.props.match.params.id]['hydra:view'];\n            if (false === view['@id'].includes('page=')) {\n                return '';\n            }\n            const first = view['hydra:first']\n                ? <Pagination.First>\n                    <Link to={\"/user/notes/list/\" + view['hydra:first'].split('page=').pop()}>\n                        First\n                    </Link>\n                </Pagination.First>\n                : ''\n            ;\n\n            const next = view['hydra:next']\n                ? <>\n                    <Pagination.Next>\n                        <Link to={\"/user/notes/list/\"\n                        + view['hydra:next'].split('page=').pop()}>\n                            Next\n                        </Link>\n                    </Pagination.Next>\n                    <Pagination.Ellipsis />\n                </>\n                : ''\n            ;\n            const prev = view['hydra:previous']\n                ? <>\n                    <Pagination.Ellipsis />\n                    <Pagination.Prev>\n                        <Link to={\"/user/notes/list/\"\n                            + view['hydra:previous'].split('page=').pop()}>\n                            Previous\n                        </Link>\n                    </Pagination.Prev>\n                </>\n                : ''\n            ;\n            const last = view['hydra:last']\n                ? <Pagination.Last>\n                    <Link to={\"/user/notes/list/\" + view['hydra:last'].split('page=').pop()}>\n                        Last\n                    </Link>\n                </Pagination.Last>\n                : ''\n            ;\n            const curPage = view['@id'].split('page=').pop();\n            const space = <span> </span>;\n            const current = view['@id']\n                ? <Pagination.Item active><span> {curPage} </span></Pagination.Item>\n                : '';\n\n            return (\n                <div>\n                    <Pagination>\n                        {first}\n                        {prev}\n                        {current}\n                        {next}\n                        {last}\n                    </Pagination>\n                </div>\n            );\n        }\n    }\n    componentDidMount() {\n        this.props.history.listen((location) => {\n            let pathParts = location.pathname.split('/');\n            const pageId = pathParts.pop();\n            const lastPart = pathParts.pop();\n            const preLastPart = pathParts.pop();\n            if (preLastPart === 'notes' && lastPart === 'list') {\n                if (false === this.props.dataFetchFinished && false === this.props.loading) {\n                    let user = null === this.props.user ? localStorage.getItem('user') : this.props.user;\n                    this.props.fetchNotesList(user, pageId);\n                }\n            }\n        });\n        if (false === this.props.dataFetchFinished && false === this.props.loading) {\n            let user = null === this.props.user ? localStorage.getItem('user') : this.props.user;\n            this.props.fetchNotesList(user, this.props.match.params.id);\n        }\n    }\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (Object.keys(this.props.deleted).length > 0) {\n            let user = null === this.props.user ? localStorage.getItem('user') : this.props.user;\n            this.props.fetchNotesList(user, this.props.match.params.id);\n            if (this.state.msg !== \"Note deleted succesfuly\") {\n                this.setState({msg: \"Note deleted succesfuly\"});\n            }\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <h1>Your notes</h1>\n                <p>{this.state.msg}</p>\n                {this.getNotes()}\n                {this.getPager()}\n            </div>\n        );\n    }\n}\n\nconst connectedList = connect(mapStateToProps, mapDispatchToProps)(List);\nexport default withRouter(connectedList);\n","import React from \"react\";\nimport {withRouter} from \"react-router\";\nimport {connect} from \"react-redux\";\nimport {initiateNoteCreate, setAlert, fetchNote, initiateNoteEdit, deleteShare} from \"../../../../actions\";\nimport {Link} from \"react-router-dom\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\n\nconst CREATE = 'Create';\nconst EDIT = 'Edit';\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        initiateNoteCreate: (ownerId, title, message) => dispatch(initiateNoteCreate(ownerId, title, message)),\n        initiateNoteEdit: (ownerId, id, title, message) => dispatch(initiateNoteEdit(ownerId, id, title, message)),\n        deleteShare: (id) => dispatch(deleteShare(id)),\n        fetchNote: (id) => dispatch(fetchNote(id)),\n        setAlert: (msg) => dispatch(setAlert(msg))\n    };\n};\n\nconst mapStateToProps = (state) => {\n    return {...state};\n};\n\nclass NotesCreateEdit extends React.Component {\n    _isMounted = false;\n    constructor(props) {\n        super(props);\n        this.state = {\n            title: '',\n            message: '',\n            noteShares: null,\n            error: null,\n            refreshing: false\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleDelete = this.handleDelete.bind(this);\n    }\n    handleChange(event) {\n        this.setState({\n            ...this.state,\n            [event.target.id]: event.target.value\n        });\n    }\n    handleSubmit(event) {\n        event.preventDefault();\n        if (CREATE === this.getCreateOrEdit()) {\n            this.props.initiateNoteCreate(\n                this.props.user.split('/').pop(),\n                this.state.title,\n                this.state.message\n            );\n        } else {\n            this.props.initiateNoteEdit(\n                this.props.user.split('/').pop(),\n                this.getNoteId(),\n                this.state.title,\n                this.state.message\n            );\n        }\n    }\n    handleDelete(event) {\n        this.props.deleteShare(event.target.dataset.id.split('/').pop());\n    }\n    getCreateOrEdit() {\n        if (this.props.match.params.id) {\n            return EDIT;\n        }\n\n        return CREATE;\n    }\n    getNoteId() {\n        if (this.props.match.params.id) {\n            return this.props.match.params.id;\n        }\n\n        return null;\n    }\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (true === this.props.loaded) {\n            if (true === this.props.mainActionFinished) {\n                const msg = this.getCreateOrEdit() === CREATE\n                    ? 'Succesfuly created Note'\n                    : 'Succesfuly updated Note';\n                this.props.setAlert(msg);\n                this.props.history.push('/user/');\n            } else if (true === this.props.dataFetchFinished) {\n                const thisNote = this.props.note[this.getNoteId()];\n                if (thisNote && this.state.refreshing) {\n                    this.setState(\n                        {\n                            ...this.state,\n                            refreshing: false,\n                            title: thisNote.title,\n                            message: thisNote.message,\n                            noteShares: thisNote.noteShares\n                        }\n                    );\n                }\n            }\n            //need to check if main action is finished\n        }\n    }\n    componentDidMount() {\n        this._isMounted = true;\n        if (EDIT === this.getCreateOrEdit()) {\n            const nid = this.getNoteId();\n            if (nid !== 'create') {\n                this.setState({...this.setState, refreshing: true})\n                this.props.fetchNote(nid);\n            }\n        }\n        this.props.history.listen((location) => {\n            if (location.pathname.split('/').pop() === 'create') {\n                if (this._isMounted) {\n                    this.setState({\n                        title: '',\n                        message: '',\n                        error: null,\n                        refreshing: false\n                    });\n                }\n            }\n        });\n    }\n    componentWillUnmount() {\n        this._isMounted = false;\n    }\n\n    getForm() {\n        const error = '';\n        if (this.state.refreshing) {\n            return <div>Refreshing Note data for editing</div>\n        }\n\n        return <Form>\n            <Form.Group>\n                <Form.Label>Title</Form.Label>\n                <Form.Control onChange={this.handleChange} value={this.state.title} type=\"text\" placeholder=\"Enter title\" name=\"title\" id=\"title\" />\n                <Form.Text className=\"text-muted\">\n                    The title for your note\n                </Form.Text>\n            </Form.Group>\n            <Form.Group>\n                <Form.Label>Message</Form.Label>\n                <Form.Control onChange={this.handleChange} value={this.state.message} type=\"text\" placeholder=\"Note contents\" name=\"message\" id=\"message\" />\n                <Form.Text className=\"text-muted\">\n                    Enter your note contents\n                </Form.Text>\n            </Form.Group>\n            <Button variant=\"primary\" onClick={this.handleSubmit} type=\"submit\">{this.getCreateOrEdit() + \" Note\"}</Button>\n            {error}\n        </Form>;\n    }\n    getNoteShares() {\n        if (null === this.state.noteShares) {\n            return '';\n        }\n        const items = this.state.noteShares.map((noteShare) =>\n            <ListGroup.Item key={noteShare['@id']}>\n                {noteShare['user']['email']}<span> </span>\n                {\n                    this.props.deleted.hasOwnProperty(noteShare['@id'].split('/').pop())\n                    ? ' - Sharing removed '\n                    : <Button variant=\"outline-danger\" onClick={this.handleDelete} className=\"share-delete\" data-id={noteShare['@id']}>\n                        Remove sharing</Button>\n                }\n            </ListGroup.Item>\n        );\n\n        return <div>\n            <hr />\n            <h2>Shared with:</h2>\n            <ListGroup>\n                {items}\n            </ListGroup>\n            <hr />\n        </div>;\n    }\n    render() {\n\n        const shareThis = EDIT === this.getCreateOrEdit()\n            ? <Link to={\"/user/notes/share/\" + this.props.match.params.id}>Share this note</Link>\n            : ''\n        ;\n\n        return (\n            <div>\n                <h1>{this.getCreateOrEdit()} Note</h1>\n                {this.getForm()}\n                {this.getNoteShares()}\n                {shareThis}\n            </div>\n        );\n    }\n}\n\nconst connectedNotesCreateEdit = connect(mapStateToProps, mapDispatchToProps)(NotesCreateEdit);\nexport default withRouter(connectedNotesCreateEdit);\n","import React from \"react\";\nimport {connect} from 'react-redux';\nimport {initiateNoteShare, setAlert, fetchByEmail} from \"../../../../actions\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        initiateNoteShare: (note, user) => dispatch(initiateNoteShare(note, user)),\n        setAlert: (msg) => dispatch(setAlert(msg)),\n        fetchByEmail: (email, page) => dispatch(fetchByEmail(email, page))\n    };\n};\n\nconst mapStateToProps = (state) => {\n    return {...state};\n};\n\nclass NotesShare extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            user: '',\n            userid: null\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSearchSubmit = this.handleSearchSubmit.bind(this);\n        this.handleShareSubmit = this.handleShareSubmit.bind(this);\n        this.getResults = this.getResults.bind(this);\n    }\n    handleChange(event) {\n        this.setState({\n            ...this.state,\n            [event.target.id]: event.target.value\n        });\n    }\n    handleSearchSubmit(event) {\n        event.preventDefault();\n        this.props.fetchByEmail(this.state.user, 1);\n\n        return false;\n    }\n    handleShareSubmit(event) {\n        event.preventDefault();\n        this.props.initiateNoteShare(\n            \"/api/notes/\" + this.props.match.params.id,\n            this.state.userid\n        );\n\n        return false;\n    }\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (true === this.props.loaded) {\n            if (true === this.props.mainActionFinished) {\n                this.props.setAlert('Note shared succesfuly');\n                this.props.history.push('/user/');\n            }\n        }\n    }\n\n    getForm() {\n        let error = '';\n        if (this.props.error !== null) {\n            if (\n                this.props.error.response\n                && this.props.error.response.data\n                && this.props.error.response.data.error\n            ) {\n                error = <p>{this.props.error.response.data.error}</p>\n            } else if (\n                this.props.error.response\n                && this.props.error.response.data\n            ) {\n                error = <p>{this.props.error.response.data['hydra:description'].replace(/^note\\:\\s/, \"\")}</p>\n            } else {\n                error = <p>{this.props.error.message}</p>\n            }\n        }\n\n        return (\n            <div>\n                <Form onSubmit={this.handleSearchSubmit}>\n                    <Form.Group>\n                        <Form.Label>Search by user email</Form.Label>\n                        <Form.Control onChange={this.handleChange} value={this.state.title} type=\"text\" placeholder=\"Enter user email\" name=\"user\" id=\"user\" />\n                        <Form.Text className=\"text-muted\">\n                            Enter at least the portion of email you want to share a note with\n                        </Form.Text>\n                    </Form.Group>\n                    <Button variant=\"primary\" type=\"submit\">Search</Button>\n                </Form>\n                <p>{error}</p>\n            </div>\n        );\n    }\n    getResults() {\n        if (this.props.search[this.state.user]) {\n            let res = this.props.search[this.state.user][1]['hydra:member'];\n\n            var results = res.filter(function(result) {\n                if (result.isMe) {\n                    return false;\n                }\n                return true;\n            });\n            results = results.map(function(result) {\n\n                return <option value={result['@id']} key={result['@id']}>{result.email}</option>;\n            });\n\n            return (\n                <Form onSubmit={this.handleShareSubmit}>\n                    <Form.Group>\n                        <Form.Label>Select a user</Form.Label>\n                        <Form.Control as=\"select\" custom id=\"userid\" name=\"userid\"  onChange={this.handleChange}>\n                            {results}\n                        </Form.Control>\n                        <Form.Text className=\"text-muted\">\n                            Select specific user by email you want to share a note with\n                        </Form.Text>\n                    </Form.Group>\n                    <Button variant=\"primary\" type=\"submit\">Share</Button>\n                </Form>\n            );\n        }\n\n        return '';\n    }\n    render() {\n        return (\n            <div>\n                <h1>Share a note</h1>\n                {this.getForm()}\n                {this.getResults()}\n            </div>\n        );\n    }\n}\n\nconst ConnectedNotesShare = connect(mapStateToProps, mapDispatchToProps)(NotesShare);\nexport default ConnectedNotesShare;\n","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport {Link, withRouter} from \"react-router-dom\";\nimport {fetchSharedForUser, setAlert} from \"../../../../actions\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        fetchSharedForUser: (id, page) => dispatch(fetchSharedForUser(id, page)),\n        setAlert: (msg) => dispatch(setAlert(msg))\n    };\n};\n\nconst mapStateToProps = (state) => {\n    return {...state};\n};\n\n\nclass NotesSharedWithMe extends React.Component {\n    componentDidMount() {\n        let user = this.props.user;\n        if (null === user) {\n            user = localStorage.getItem('user');\n        }\n        this.props.fetchSharedForUser(user, 1);\n    }\n\n    getNotes() {\n        if (this.props.shared[this.props.match.params.id]) {\n            let notes = this.props.shared[this.props.match.params.id]['hydra:member'];\n\n            const listItems = notes.map((note) =>\n                <ListGroup.Item key={note['note']['@id']}>\n                    <h5>{note['noteOwner']}<span> </span>\n                        <span style={{fontWeight: \"normal\", fontSize: \"small\"}}>{\n                            new Intl.DateTimeFormat(\n                                \"en-GB\",\n                                {\n                                    year: \"numeric\",\n                                    month: \"long\",\n                                    day: \"2-digit\",\n                                    hour: 'numeric',\n                                    minute: 'numeric',\n                                    second: 'numeric'\n                                }\n                            ).format(new Date(note['note']['createdAt']))\n                        }</span>\n                    </h5>\n                    <p><b>{note['note']['title']}</b></p>\n                    <p>{note['note']['message']}</p>\n                </ListGroup.Item>\n            );\n\n            return (\n                <ListGroup>\n                    {listItems}\n                </ListGroup>\n            );\n        }\n\n        return '';\n    }\n\n    getPager() {\n        return '';\n    }\n\n    render() {\n        return (\n            <div>\n                <h1>Notes shared with me</h1>\n                {this.getNotes()}\n                {this.getPager()}\n            </div>\n        );\n    }\n}\n\nconst ConnectedNotesSharedWithMe = connect(mapStateToProps, mapDispatchToProps)(NotesSharedWithMe);\nexport default withRouter(ConnectedNotesSharedWithMe);\n","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport {initiateUserUpdate} from \"../../../actions\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\n\nconst mapStateToProps = (state) => {\n    return {...state};\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        initiateUserUpdate: (id, phone) => dispatch(initiateUserUpdate(id, phone))\n    };\n};\n\nclass UserSettings extends React.Component {\n    dataLoaded = false;\n    constructor(props) {\n        super(props);\n        this.state = {\n            phone: '',\n            msg: '',\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n    handleChange(event) {\n        this.setState({\n            ...this.state,\n            [event.target.id]: event.target.value\n        });\n    }\n    handleSubmit(event) {\n        event.preventDefault();\n        const user = null === this.props.user ? localStorage.getItem('user') : this.props.user;\n        this.props.initiateUserUpdate(user.split('/').pop(), this.state.phone);\n    }\n    componentDidMount() {\n        if (this.props.userFetchFinished && !this.dataLoaded) {\n            this.setState({\n                phone: this.props.userData.phoneNumber\n            });\n            this.dataLoaded = true;\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.props.userFetchFinished && !this.dataLoaded) {\n            this.setState({\n                phone: this.props.userData.phoneNumber\n            });\n            this.dataLoaded = true;\n        }\n        if (this.props.mainActionFinished && this.state.msg !== 'User profile updated succesfuly') {\n            this.setState({\n                msg: 'User profile updated succesfuly'\n            });\n\n        }\n    }\n\n    render() {\n        let error = '';\n        if (this.props.error) {\n            if (\n                this.props.error.response\n                && this.props.error.response.data\n                && this.props.error.response.data.error\n            ) {\n                error = <p>{this.props.error.response.data.error}</p>\n            } else {\n                error = <p>{this.props.error.message}</p>\n            }\n        }\n        const phone = this.state.phone ? this.state.phone : '';\n\n        return (\n            <div>\n                <h1>Profile</h1>\n                <p>{this.state.msg}</p>\n                <Form>\n                    <Form.Group>\n                        <Form.Label>Phone</Form.Label>\n                        <Form.Control onChange={this.handleChange} value={phone} type=\"text\" placeholder=\"Enter your phone\" name=\"phone\" id=\"phone\" />\n                        <Form.Text className=\"text-muted\">\n                            This one is only for admin contact and is only visible to owner(you) and admin\n                        </Form.Text>\n                    </Form.Group>\n\n                    <Button variant=\"primary\" onClick={this.handleSubmit} type=\"submit\">Update</Button>\n                    {error}\n                </Form>\n            </div>\n        );\n    }\n}\nconst connectedUserSettings = connect(mapStateToProps, mapDispatchToProps)(UserSettings);\nexport default connectedUserSettings;\n","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport {getUserData, initiateLogout} from \"../../actions\";\nimport {withRouter} from 'react-router';\nimport {Link, Route, Switch} from \"react-router-dom\";\nimport List from \"./User/Notes/List\";\nimport NotesCreateEdit from \"./User/Notes/NotesCreateEdit\";\nimport NotesShare from \"./User/Notes/NotesShare\";\nimport NotesSharedWithMe from \"./User/Notes/NotesSharedWithMe\";\nimport UserSettings from \"./User/UserSettings\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\nimport Button from \"react-bootstrap/Button\";\nimport Alert from \"react-bootstrap/Alert\";\n\nconst mapStateToProps = (state) => {\n    return {...state};\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        initiateLogout: () => dispatch(initiateLogout()),\n        getUserData: (id) => dispatch(getUserData(id))\n    };\n};\n\nclass User extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleLogoutClick = this.handleLogoutClick.bind(this);\n        let user = localStorage.getItem('user');\n        this.state = {\n            user: user\n        };\n    }\n    handleLogoutClick(event) {\n        this.props.initiateLogout();\n    }\n    componentDidMount() {\n        if (null !== this.state.user && null === this.props.user) {\n            this.props.getUserData(this.state.user);\n        }\n    }\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (null === this.props.user && true === this.props.loaded) {\n            this.props.history.push('/');\n        }\n    }\n    render() {\n\n        if (this.props.userData === null) {\n            this.props.getUserData(this.props.user);\n        }\n        const email = this.props.userData ? this.props.userData.email: '';\n        const alert = this.props.alert ? <Alert variant=\"info\">{this.props.alert}</Alert> : '';\n\n        return (\n            <div>\n                {alert}\n                <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" sticky=\"top\">\n                    <Navbar.Brand>Notes sharing</Navbar.Brand>\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\n                        <Nav className=\"mr-auto\">\n                            <Nav.Link as={Link} to=\"/user/settings\">Settings</Nav.Link>\n                            <Nav.Link as={Link} to=\"/user/notes/list/1\">Notes</Nav.Link>\n                            <Nav.Link as={Link} to=\"/user/notes/create\">Create Note</Nav.Link>\n                            <Nav.Link as={Link} to=\"/user/notes/list/shared-with-me/1\">Notes shared with me</Nav.Link>\n                        </Nav>\n                    </Navbar.Collapse>\n                    <Navbar.Brand className=\"navbar-right\"><span style={{color: \"grey\"}}>User email:</span> {email}</Navbar.Brand>\n                    <Button onClick={this.handleLogoutClick} variant=\"dark\">Log out</Button>\n                </Navbar>\n                <Switch>\n                    <Route path=\"/user/notes/list/:id(\\d+)\" component={List} />\n                    <Route path=\"/user/notes/create\" component={NotesCreateEdit} />\n                    <Route path=\"/user/notes/edit/:id(\\d+)\" component={NotesCreateEdit} />\n                    <Route path=\"/user/notes/share/:id(\\d+)\" component={NotesShare} />\n                    <Route path=\"/user/notes/list/shared-with-me/:id(\\d+)\" component={NotesSharedWithMe} />\n                    <Route path=\"/user/settings\" component={UserSettings} />\n                </Switch>\n            </div>\n        );\n    }\n}\n\nconst connectedUser = connect(mapStateToProps, mapDispatchToProps)(User);\n\nexport default withRouter(connectedUser);\n","import React from \"react\";\nimport {withRouter} from \"react-router\";\nimport {Link} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport {initiateLogin, getUserData} from \"../actions\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport Alert from \"react-bootstrap/Alert\";\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        initiateLogin: (email, password) => dispatch(initiateLogin(email, password)),\n        getUserData: (id) => dispatch(getUserData(id))\n    };\n};\n\nconst mapStateToProps = (state) => {\n    return {...state};\n};\n\nclass Login extends React.Component {\n    constructor(props) {\n        super(props);\n        let user = localStorage.getItem('user');\n        this.state = {\n            email: '',\n            password: '',\n            user: user,\n            error: null\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n    handleChange(event) {\n        this.setState({\n            ...this.state,\n            [event.target.id]: event.target.value\n        });\n    }\n    handleSubmit(event) {\n        event.preventDefault();\n        this.props.initiateLogin(this.state.email, this.state.password);\n    }\n    componentDidMount() {\n        if (this.state.user !== null) {\n            this.props.getUserData(this.state.user);\n        }\n    }\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.props.userData !== null) {\n            this.props.history.push('/user/notes/list/1');\n        }\n    }\n\n    render() {\n        let error = '';\n        if (this.props.error !== null) {\n            if (\n                this.props.error.response\n                && this.props.error.response.data\n                && this.props.error.response.data.error\n            ) {\n                error =\n                    <div className=\"alert alert-danger alert-dismissible fade show\" role=\"alert\">\n                        <strong>You got an error!</strong>\n                        <p>\n                            {this.props.error.response.data.error}\n                        </p>\n                        <button type=\"button\" className=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n                            <span aria-hidden=\"true\">&times;</span>\n                        </button>\n                    </div>;\n\n            } else {\n                error = <p>{this.props.error.message}</p>\n            }\n        }\n        const alert = this.props.alert ? <Alert variant=\"info\">{this.props.alert}</Alert> : '';\n\n        return (\n            <div>\n                {alert}\n                {error}\n                <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" sticky=\"top\">\n                    <Navbar.Brand>Notes sharing</Navbar.Brand>\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\n                        <Nav className=\"mr-auto\">\n                            <Nav.Link as={Link} disabled to=\"/\">Login</Nav.Link>\n                            <Nav.Link as={Link} to=\"/register\">Register</Nav.Link>\n                        </Nav>\n                    </Navbar.Collapse>\n                </Navbar>\n                <h1>Login</h1>\n                <Form>\n                    <Form.Group>\n                        <Form.Label>Email</Form.Label>\n                        <Form.Control onChange={this.handleChange} value={this.state.email} type=\"email\"\n                                      placeholder=\"Enter your email\" name=\"email\" id=\"email\" />\n                        <Form.Text className=\"text-muted\">\n                            Your registered email address\n                        </Form.Text>\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control onChange={this.handleChange} value={this.state.password} type=\"password\"\n                                      placeholder=\"Enter your password\" name=\"password\" id=\"password\" />\n                        <Form.Text className=\"text-muted\">\n                            Your registration password\n                        </Form.Text>\n                    </Form.Group>\n                    <Button variant=\"primary\" onClick={this.handleSubmit} type=\"submit\">Login</Button>\n                </Form>\n            </div>\n        );\n    }\n}\n\nconst connectedLogin = connect(mapStateToProps, mapDispatchToProps)(Login);\nexport default withRouter(connectedLogin);\n","import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport {withRouter} from \"react-router\";\nimport {connect} from \"react-redux\";\nimport {initiateRegister, setAlert} from \"../actions\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Alert from \"react-bootstrap/Alert\";\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        initiateRegister: (email, password) => dispatch(initiateRegister(email, password)),\n        setAlert: (msg) => dispatch(setAlert(msg))\n    };\n};\n\nconst mapStateToProps = (state) => {\n    return {...state};\n};\n\nclass Register extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: '',\n            password: '',\n            error: null\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n    handleChange(event) {\n        this.setState({\n            ...this.state,\n            [event.target.id]: event.target.value\n        });\n    }\n    handleSubmit(event) {\n        event.preventDefault();\n        this.props.initiateRegister(this.state.email, this.state.password);\n    }\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (null !== this.props.userData) {\n            this.props.history.push('/user/notes/list/1');\n        }\n        if (true === this.props.loaded) {\n            this.props.setAlert('Succesfuly registered');\n            this.props.history.push('/');\n        }\n    }\n\n    render() {\n        let error = '';\n        if (this.props.error) {\n            if (\n                this.props.error.response\n                && this.props.error.response.data\n                && this.props.error.response.data['hydra:description']\n            ) {\n                error = <Alert variant=\"danger\">\n                    {this.props.error.response.data['hydra:description']}\n                </Alert>;\n            } else {\n                error = <Alert variant=\"danger\">\n                    {this.props.error.message}\n                </Alert>;\n            }\n        }\n\n        return (\n            <div>\n                <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" sticky=\"top\">\n                    <Navbar.Brand>Notes sharing</Navbar.Brand>\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\n                        <Nav className=\"mr-auto\">\n                            <Nav.Link as={Link} to=\"/\">Login</Nav.Link>\n                            <Nav.Link as={Link} disabled to=\"/register\">Register</Nav.Link>\n                        </Nav>\n                    </Navbar.Collapse>\n                </Navbar>\n                <h1>Register</h1>\n                <Form>\n                    {error}\n                    <Form.Group>\n                        <Form.Label>Email</Form.Label>\n                        <Form.Control onChange={this.handleChange} value={this.state.email} type=\"email\"\n                                      placeholder=\"Enter your email\" name=\"email\" id=\"email\" />\n                        <Form.Text className=\"text-muted\">\n                            Please enter a valid email address\n                        </Form.Text>\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control onChange={this.handleChange} value={this.state.password} type=\"password\"\n                                      placeholder=\"Enter your password\" name=\"password\" id=\"password\" />\n                        <Form.Text className=\"text-muted\">\n                            Any non empty password will be ok\n                        </Form.Text>\n                    </Form.Group>\n                    <Button variant=\"primary\" onClick={this.handleSubmit} type=\"submit\">Register</Button>\n                </Form>\n            </div>\n        );\n    }\n}\n\nconst connectedRegister = connect(mapStateToProps, mapDispatchToProps)(Register);\nexport default withRouter(connectedRegister);\n","import React from \"react\";\nimport {\n    Switch,\n    Route,\n    withRouter\n} from \"react-router-dom\";\nimport User from \"./pages/Logged/User\";\nimport Login from \"./pages/Login\";\nimport Register from \"./pages/Register\";\nimport {connect} from \"react-redux\";\nimport {locationChanged} from \"./actions\";\nimport Spinner from \"react-bootstrap/Spinner\";\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        locationChanged: () => dispatch(locationChanged()),\n    };\n};\n\nconst mapStateToProps = (state) => {\n    return {...state};\n};\n\nclass AppRouter extends React.Component {\n    componentDidMount() {\n        this.props.history.listen((location) => {\n            this.props.locationChanged();\n        });\n    }\n\n    render() {\n        const loading = this.props.loading\n            ? <Spinner animation=\"border\" role=\"status\">\n                <span className=\"sr-only\">Loading...</span>\n            </Spinner>\n            : '';\n\n        return (\n            <div>\n                {loading}\n                <Switch>\n                    <Route exact path=\"/\">\n                        <Login />\n                    </Route>\n                    <Route exact path=\"/register\">\n                        <Register />\n                    </Route>\n                    <Route path=\"/user/\">\n                        <User />\n                    </Route>\n                </Switch>\n            </div>\n        );\n    }\n};\nconst connectedAppRouter = connect(mapStateToProps, mapDispatchToProps)(AppRouter);\nexport default withRouter(connectedAppRouter);\n","import React from \"react\";\nimport {\n    BrowserRouter as Router,\n} from \"react-router-dom\";\nimport AppRouter from \"./AppRouter\";\nimport Container from 'react-bootstrap/Container';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\n\nclass App extends React.Component {\n    render() {\n        return (\n            <Container className=\"p-3\">\n                <Jumbotron>\n                <Router>\n                    <AppRouter />\n                </Router>\n                </Jumbotron>\n            </Container>\n        );\n    }\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from 'react-dom';\nimport {createStore, applyMiddleware} from \"redux\";\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers/rootReducer';\nimport App from './App';\nimport {Provider} from \"react-redux\";\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}